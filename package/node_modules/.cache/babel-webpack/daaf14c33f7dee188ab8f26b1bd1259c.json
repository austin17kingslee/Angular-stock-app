{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/slide-toggle\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction DzmtAutocompleteOverviewComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" | \");\n    i0.ɵɵelementStart(5, \"small\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", state_r2.flag, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(state_r2.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Population: \", state_r2.population, \"\");\n  }\n}\n\nexport class DzmtAutocompleteOverviewComponent {\n  constructor() {\n    this.stateCtrl = new FormControl();\n    this.states = [{\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    }, {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    }, {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    }, {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }];\n    this.filteredStates = this.stateCtrl.valueChanges.pipe(startWith(''), map(state => state ? this._filterStates(state) : this.states.slice()));\n  }\n\n  _filterStates(value) {\n    const filterValue = value.toLowerCase();\n    return this.states.filter(state => state.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  ngOnInit() {}\n\n}\n\nDzmtAutocompleteOverviewComponent.ɵfac = function DzmtAutocompleteOverviewComponent_Factory(t) {\n  return new (t || DzmtAutocompleteOverviewComponent)();\n};\n\nDzmtAutocompleteOverviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DzmtAutocompleteOverviewComponent,\n  selectors: [[\"app-dzmt-autocomplete-overview\"]],\n  decls: 12,\n  vars: 6,\n  consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"aria-label\", \"State\", 3, \"matAutocomplete\", \"formControl\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"checked\", \"change\"], [3, \"value\"], [\"aria-hidden\", \"\", \"height\", \"25\", 1, \"example-option-img\", 3, \"src\"]],\n  template: function DzmtAutocompleteOverviewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(2, \"mat-label\");\n      i0.ɵɵtext(3, \"State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(7, DzmtAutocompleteOverviewComponent_mat_option_7_Template, 7, 4, \"mat-option\", 4);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"mat-slide-toggle\", 5);\n      i0.ɵɵlistener(\"change\", function DzmtAutocompleteOverviewComponent_Template_mat_slide_toggle_change_10_listener() {\n        return ctx.stateCtrl.disabled ? ctx.stateCtrl.enable() : ctx.stateCtrl.disable();\n      });\n      i0.ɵɵtext(11, \" Disable Input? \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matAutocomplete\", _r0)(\"formControl\", ctx.stateCtrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 4, ctx.filteredStates));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"checked\", ctx.stateCtrl.disabled);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i2.MatLabel, i3.MatInput, i4.MatAutocompleteTrigger, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatSlideToggle, i7.MatOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkem10LWF1dG9jb21wbGV0ZS1vdmVydmlldy5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\GHTK\\Documents\\Personal files\\20221\\GR2\\Feb13th\\Angular-stock-app\\package\\src\\app\\material\\dzmt-autocomplete\\dzmt-autocomplete-overview\\dzmt-autocomplete-overview.component.ts","C:\\Users\\GHTK\\Documents\\Personal files\\20221\\GR2\\Feb13th\\Angular-stock-app\\package\\src\\app\\material\\dzmt-autocomplete\\dzmt-autocomplete-overview\\dzmt-autocomplete-overview.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nexport interface State {\r\n  flag: string;\r\n  name: string;\r\n  population: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dzmt-autocomplete-overview',\r\n  templateUrl: './dzmt-autocomplete-overview.component.html',\r\n  styleUrls: ['./dzmt-autocomplete-overview.component.css']\r\n})\r\nexport class DzmtAutocompleteOverviewComponent implements OnInit {\r\n\r\n  stateCtrl = new FormControl();\r\n  filteredStates: Observable<State[]>;\r\n\r\n  states: State[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    this.filteredStates = this.stateCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(state => state ? this._filterStates(state) : this.states.slice())\r\n      );\r\n  }\r\n\r\n  private _filterStates(value: string): State[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.states.filter(state => state.name.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>State</mat-label>\r\n    <input matInput\r\n           aria-label=\"State\"\r\n           [matAutocomplete]=\"auto\"\r\n           [formControl]=\"stateCtrl\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\">\r\n        <img class=\"example-option-img\" aria-hidden [src]=\"state.flag\" height=\"25\">\r\n        <span>{{state.name}}</span> |\r\n        <small>Population: {{state.population}}</small>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n\r\n  <br>\r\n\r\n  <mat-slide-toggle\r\n    [checked]=\"stateCtrl.disabled\"\r\n    (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\">\r\n    Disable Input?\r\n  </mat-slide-toggle>\r\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}