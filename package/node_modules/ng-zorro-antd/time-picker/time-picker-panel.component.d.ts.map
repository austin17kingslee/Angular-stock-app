{"version":3,"file":"time-picker-panel.component.d.ts","sources":["time-picker-panel.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { ChangeDetectorRef, DebugElement, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\r\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\r\nimport { TimeHolder } from './time-holder';\r\nexport declare type NzTimePickerUnit = 'hour' | 'minute' | 'second' | '12-hour';\r\nexport declare class NzTimePickerPanelComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n    private ngZone;\r\n    private cdr;\r\n    dateHelper: DateHelperService;\r\n    private elementRef;\r\n    static ngAcceptInputType_nzUse12Hours: BooleanInput;\r\n    private _nzHourStep;\r\n    private _nzMinuteStep;\r\n    private _nzSecondStep;\r\n    private unsubscribe$;\r\n    private onChange?;\r\n    private onTouch?;\r\n    private _format;\r\n    private _disabledHours?;\r\n    private _disabledMinutes?;\r\n    private _disabledSeconds?;\r\n    private _allowEmpty;\r\n    time: TimeHolder;\r\n    hourEnabled: boolean;\r\n    minuteEnabled: boolean;\r\n    secondEnabled: boolean;\r\n    firstScrolled: boolean;\r\n    enabledColumns: number;\r\n    hourRange: ReadonlyArray<{\r\n        index: number;\r\n        disabled: boolean;\r\n    }>;\r\n    minuteRange: ReadonlyArray<{\r\n        index: number;\r\n        disabled: boolean;\r\n    }>;\r\n    secondRange: ReadonlyArray<{\r\n        index: number;\r\n        disabled: boolean;\r\n    }>;\r\n    use12HoursRange: ReadonlyArray<{\r\n        index: number;\r\n        value: string;\r\n    }>;\r\n    hourListElement?: DebugElement;\r\n    minuteListElement?: DebugElement;\r\n    secondListElement?: DebugElement;\r\n    use12HoursListElement?: DebugElement;\r\n    nzInDatePicker: boolean;\r\n    nzAddOn?: TemplateRef<void>;\r\n    nzHideDisabledOptions: boolean;\r\n    nzClearText?: string;\r\n    nzNowText?: string;\r\n    nzOkText?: string;\r\n    nzPlaceHolder?: string | null;\r\n    nzUse12Hours: boolean;\r\n    nzDefaultOpenValue?: Date;\r\n    readonly closePanel: EventEmitter<void>;\r\n    set nzAllowEmpty(value: boolean);\r\n    get nzAllowEmpty(): boolean;\r\n    set nzDisabledHours(value: undefined | (() => number[]));\r\n    get nzDisabledHours(): undefined | (() => number[]);\r\n    set nzDisabledMinutes(value: undefined | ((hour: number) => number[]));\r\n    get nzDisabledMinutes(): undefined | ((hour: number) => number[]);\r\n    set nzDisabledSeconds(value: undefined | ((hour: number, minute: number) => number[]));\r\n    get nzDisabledSeconds(): undefined | ((hour: number, minute: number) => number[]);\r\n    set format(value: string);\r\n    get format(): string;\r\n    set nzHourStep(value: number);\r\n    get nzHourStep(): number;\r\n    set nzMinuteStep(value: number);\r\n    get nzMinuteStep(): number;\r\n    set nzSecondStep(value: number);\r\n    get nzSecondStep(): number;\r\n    trackByFn(index: number): number;\r\n    buildHours(): void;\r\n    buildMinutes(): void;\r\n    buildSeconds(): void;\r\n    build12Hours(): void;\r\n    buildTimes(): void;\r\n    scrollToTime(delay?: number): void;\r\n    selectHour(hour: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): void;\r\n    selectMinute(minute: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): void;\r\n    selectSecond(second: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): void;\r\n    select12Hours(value: {\r\n        index: number;\r\n        value: string;\r\n    }): void;\r\n    scrollToSelected(instance: HTMLElement, index: number, duration: number | undefined, unit: NzTimePickerUnit): void;\r\n    translateIndex(index: number, unit: NzTimePickerUnit): number;\r\n    scrollTo(element: HTMLElement, to: number, duration: number): void;\r\n    calcIndex(array: number[] | undefined, index: number): number;\r\n    protected changed(): void;\r\n    protected touched(): void;\r\n    timeDisabled(value: Date): boolean;\r\n    onClickNow(): void;\r\n    onClickOk(): void;\r\n    isSelectedHour(hour: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): boolean;\r\n    isSelectedMinute(minute: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): boolean;\r\n    isSelectedSecond(second: {\r\n        index: number;\r\n        disabled: boolean;\r\n    }): boolean;\r\n    isSelected12Hours(value: {\r\n        index: number;\r\n        value: string;\r\n    }): boolean;\r\n    constructor(ngZone: NgZone, cdr: ChangeDetectorRef, dateHelper: DateHelperService, elementRef: ElementRef<HTMLElement>);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    writeValue(value: Date): void;\r\n    registerOnChange(fn: (value: Date) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n}\r\n"]}