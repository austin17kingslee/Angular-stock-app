{"version":3,"file":"time-picker.component.d.ts","sources":["time-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { DateHelperService, NzI18nService } from 'ng-zorro-antd/i18n';\r\nexport declare class NzTimePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    nzConfigService: NzConfigService;\r\n    protected i18n: NzI18nService;\r\n    private element;\r\n    private renderer;\r\n    private cdr;\r\n    private dateHelper;\r\n    private platform;\r\n    private elementRef;\r\n    private directionality;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzUse12Hours: BooleanInput;\r\n    static ngAcceptInputType_nzHideDisabledOptions: BooleanInput;\r\n    static ngAcceptInputType_nzAllowEmpty: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\r\n    private _onChange?;\r\n    private _onTouched?;\r\n    private destroy$;\r\n    isInit: boolean;\r\n    focused: boolean;\r\n    inputValue: string;\r\n    value: Date | null;\r\n    preValue: Date | null;\r\n    origin: CdkOverlayOrigin;\r\n    inputSize?: number;\r\n    i18nPlaceHolder$: Observable<string | undefined>;\r\n    overlayPositions: ConnectionPositionPair[];\r\n    dir: Direction;\r\n    inputRef: ElementRef<HTMLInputElement>;\r\n    nzId: string | null;\r\n    nzSize: string | null;\r\n    nzHourStep: number;\r\n    nzMinuteStep: number;\r\n    nzSecondStep: number;\r\n    nzClearText: string;\r\n    nzNowText: string;\r\n    nzOkText: string;\r\n    nzPopupClassName: string;\r\n    nzPlaceHolder: string;\r\n    nzAddOn?: TemplateRef<void>;\r\n    nzDefaultOpenValue?: Date;\r\n    nzDisabledHours?: () => number[];\r\n    nzDisabledMinutes?: (hour: number) => number[];\r\n    nzDisabledSeconds?: (hour: number, minute: number) => number[];\r\n    nzFormat: string;\r\n    nzOpen: boolean;\r\n    nzUse12Hours: boolean;\r\n    nzSuffixIcon: string | TemplateRef<NzSafeAny>;\r\n    readonly nzOpenChange: EventEmitter<boolean>;\r\n    nzHideDisabledOptions: boolean;\r\n    nzAllowEmpty: boolean;\r\n    nzDisabled: boolean;\r\n    nzAutoFocus: boolean;\r\n    nzBackdrop: boolean;\r\n    emitValue(value: Date | null): void;\r\n    setValue(value: Date | null, syncPreValue?: boolean): void;\r\n    open(): void;\r\n    close(): void;\r\n    updateAutoFocus(): void;\r\n    onClickClearBtn(event: MouseEvent): void;\r\n    onClickOutside(event: MouseEvent): void;\r\n    onFocus(value: boolean): void;\r\n    focus(): void;\r\n    blur(): void;\r\n    onKeyupEsc(): void;\r\n    onKeyupEnter(): void;\r\n    onInputChange(str: string): void;\r\n    onPanelValueChange(value: Date): void;\r\n    setCurrentValueAndClose(): void;\r\n    constructor(nzConfigService: NzConfigService, i18n: NzI18nService, element: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef, dateHelper: DateHelperService, platform: Platform, elementRef: ElementRef, directionality: Directionality);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    parseTimeString(str: string): void;\r\n    ngAfterViewInit(): void;\r\n    writeValue(time: Date | null | undefined): void;\r\n    registerOnChange(fn: (time: Date | null) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    private checkTimeValid;\r\n}\r\n"]}