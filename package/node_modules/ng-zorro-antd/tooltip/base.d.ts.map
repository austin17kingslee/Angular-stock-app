{"version":3,"file":"base.d.ts","sources":["base.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\r\nimport { AfterViewInit, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NzConfigService, PopConfirmConfig, PopoverConfig } from 'ng-zorro-antd/core/config';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { POSITION_TYPE } from 'ng-zorro-antd/core/overlay';\r\nimport { BooleanInput, NgClassInterface, NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';\r\nexport interface PropertyMapping {\r\n    [key: string]: [string, () => unknown];\r\n}\r\nexport declare type NzTooltipTrigger = 'click' | 'focus' | 'hover' | null;\r\nexport declare abstract class NzTooltipBaseDirective implements OnChanges, OnDestroy, AfterViewInit {\r\n    elementRef: ElementRef;\r\n    protected hostView: ViewContainerRef;\r\n    protected resolver: ComponentFactoryResolver;\r\n    protected renderer: Renderer2;\r\n    protected noAnimation?: NzNoAnimationDirective | undefined;\r\n    protected nzConfigService?: NzConfigService | undefined;\r\n    arrowPointAtCenter?: boolean;\r\n    config?: Required<PopoverConfig | PopConfirmConfig>;\r\n    directiveTitle?: NzTSType | null;\r\n    directiveContent?: NzTSType | null;\r\n    title?: NzTSType | null;\r\n    content?: NzTSType | null;\r\n    trigger?: NzTooltipTrigger;\r\n    placement?: string | string[];\r\n    origin?: ElementRef<HTMLElement>;\r\n    visible?: boolean;\r\n    mouseEnterDelay?: number;\r\n    mouseLeaveDelay?: number;\r\n    overlayClassName?: string;\r\n    overlayStyle?: NgStyleInterface;\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n     * For create tooltip dynamically. This should be override for each different component.\r\n     */\r\n    protected componentFactory: ComponentFactory<NzTooltipBaseComponent>;\r\n    /**\r\n     * This true title that would be used in other parts on this component.\r\n     */\r\n    protected get _title(): NzTSType | null;\r\n    protected get _content(): NzTSType | null;\r\n    protected get _trigger(): NzTooltipTrigger;\r\n    protected get _placement(): string[];\r\n    protected get _visible(): boolean;\r\n    protected get _mouseEnterDelay(): number;\r\n    protected get _mouseLeaveDelay(): number;\r\n    protected get _overlayClassName(): string | null;\r\n    protected get _overlayStyle(): NgStyleInterface | null;\r\n    private internalVisible;\r\n    protected getProxyPropertyMap(): PropertyMapping;\r\n    component?: NzTooltipBaseComponent;\r\n    protected readonly destroy$: Subject<void>;\r\n    protected readonly triggerDisposables: Array<() => void>;\r\n    private delayTimer?;\r\n    constructor(elementRef: ElementRef, hostView: ViewContainerRef, resolver: ComponentFactoryResolver, renderer: Renderer2, noAnimation?: NzNoAnimationDirective | undefined, nzConfigService?: NzConfigService | undefined);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    show(): void;\r\n    hide(): void;\r\n    /**\r\n     * Force the component to update its position.\r\n     */\r\n    updatePosition(): void;\r\n    /**\r\n     * Create a dynamic tooltip component. This method can be override.\r\n     */\r\n    protected createComponent(): void;\r\n    protected registerTriggers(): void;\r\n    private updatePropertiesByChanges;\r\n    private updatePropertiesByKeys;\r\n    private initProperties;\r\n    private updateComponentValue;\r\n    private delayEnterLeave;\r\n    private removeTriggerListeners;\r\n    private clearTogglingTimer;\r\n}\r\nexport declare abstract class NzTooltipBaseComponent implements OnDestroy, OnInit {\r\n    cdr: ChangeDetectorRef;\r\n    private directionality;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    static ngAcceptInputType_nzVisible: BooleanInput;\r\n    static ngAcceptInputType_nzArrowPointAtCenter: BooleanInput;\r\n    overlay: CdkConnectedOverlay;\r\n    nzTitle: NzTSType | null;\r\n    nzContent: NzTSType | null;\r\n    nzArrowPointAtCenter: boolean;\r\n    nzOverlayClassName: string;\r\n    nzOverlayStyle: NgStyleInterface;\r\n    nzBackdrop: boolean;\r\n    nzMouseEnterDelay?: number;\r\n    nzMouseLeaveDelay?: number;\r\n    nzVisibleChange: Subject<boolean>;\r\n    set nzVisible(value: boolean);\r\n    get nzVisible(): boolean;\r\n    _visible: boolean;\r\n    set nzTrigger(value: NzTooltipTrigger);\r\n    get nzTrigger(): NzTooltipTrigger;\r\n    protected _trigger: NzTooltipTrigger;\r\n    set nzPlacement(value: POSITION_TYPE[]);\r\n    preferredPlacement: string;\r\n    origin: CdkOverlayOrigin;\r\n    dir: Direction;\r\n    _classMap: NgClassInterface;\r\n    _prefix: string;\r\n    _positions: ConnectionPositionPair[];\r\n    protected destroy$: Subject<void>;\r\n    constructor(cdr: ChangeDetectorRef, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    show(): void;\r\n    hide(): void;\r\n    updateByDirective(): void;\r\n    /**\r\n     * Force the component to update its position.\r\n     */\r\n    updatePosition(): void;\r\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\r\n    setOverlayOrigin(origin: CdkOverlayOrigin): void;\r\n    onClickOutside(event: MouseEvent): void;\r\n    /**\r\n     * Hide the component while the content is empty.\r\n     */\r\n    private updateVisibilityByTitle;\r\n    protected updateStyles(): void;\r\n    /**\r\n     * Empty component cannot be opened.\r\n     */\r\n    protected abstract isEmpty(): boolean;\r\n}\r\nexport declare function isTooltipEmpty(value: string | TemplateRef<void> | null): boolean;\r\n"]}