{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { CdkConnectedOverlay, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\r\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { NzOptionGroupComponent } from './option-group.component';\r\nimport { NzOptionComponent } from './option.component';\r\nimport { NzSelectTopControlComponent } from './select-top-control.component';\r\nimport { NzFilterOptionType, NzSelectItemInterface, NzSelectModeType, NzSelectOptionInterface } from './select.types';\r\nexport declare type NzSelectSizeType = 'large' | 'default' | 'small';\r\nexport declare class NzSelectComponent implements ControlValueAccessor, OnInit, AfterContentInit, OnChanges, OnDestroy {\r\n    private destroy$;\r\n    nzConfigService: NzConfigService;\r\n    private cdr;\r\n    private elementRef;\r\n    private platform;\r\n    private focusMonitor;\r\n    private directionality;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\r\n    static ngAcceptInputType_nzBorderless: BooleanInput;\r\n    static ngAcceptInputType_nzShowSearch: BooleanInput;\r\n    static ngAcceptInputType_nzLoading: BooleanInput;\r\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\r\n    static ngAcceptInputType_nzAutoClearSearchValue: BooleanInput;\r\n    static ngAcceptInputType_nzServerSearch: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzOpen: BooleanInput;\r\n    nzId: string | null;\r\n    nzSize: NzSelectSizeType;\r\n    nzOptionHeightPx: number;\r\n    nzOptionOverflowSize: number;\r\n    nzDropdownClassName: string | null;\r\n    nzDropdownMatchSelectWidth: boolean;\r\n    nzDropdownStyle: {\r\n        [key: string]: string;\r\n    } | null;\r\n    nzNotFoundContent: string | TemplateRef<NzSafeAny> | undefined;\r\n    nzPlaceHolder: string | TemplateRef<NzSafeAny> | null;\r\n    nzMaxTagCount: number;\r\n    nzDropdownRender: TemplateRef<NzSafeAny> | null;\r\n    nzCustomTemplate: TemplateRef<{\r\n        $implicit: NzSelectItemInterface;\r\n    }> | null;\r\n    nzSuffixIcon: TemplateRef<NzSafeAny> | string | null;\r\n    nzClearIcon: TemplateRef<NzSafeAny> | null;\r\n    nzRemoveIcon: TemplateRef<NzSafeAny> | null;\r\n    nzMenuItemSelectedIcon: TemplateRef<NzSafeAny> | null;\r\n    nzTokenSeparators: string[];\r\n    nzMaxTagPlaceholder: TemplateRef<{\r\n        $implicit: NzSafeAny[];\r\n    }> | null;\r\n    nzMaxMultipleCount: number;\r\n    nzMode: NzSelectModeType;\r\n    nzFilterOption: NzFilterOptionType;\r\n    compareWith: (o1: NzSafeAny, o2: NzSafeAny) => boolean;\r\n    nzAllowClear: boolean;\r\n    nzBorderless: boolean;\r\n    nzShowSearch: boolean;\r\n    nzLoading: boolean;\r\n    nzAutoFocus: boolean;\r\n    nzAutoClearSearchValue: boolean;\r\n    nzServerSearch: boolean;\r\n    nzDisabled: boolean;\r\n    nzOpen: boolean;\r\n    nzBackdrop: boolean;\r\n    nzOptions: NzSelectOptionInterface[];\r\n    set nzShowArrow(value: boolean);\r\n    get nzShowArrow(): boolean;\r\n    readonly nzOnSearch: EventEmitter<string>;\r\n    readonly nzScrollToBottom: EventEmitter<void>;\r\n    readonly nzOpenChange: EventEmitter<boolean>;\r\n    readonly nzBlur: EventEmitter<void>;\r\n    readonly nzFocus: EventEmitter<void>;\r\n    originElement: ElementRef;\r\n    cdkConnectedOverlay: CdkConnectedOverlay;\r\n    nzSelectTopControlComponent: NzSelectTopControlComponent;\r\n    listOfNzOptionComponent: QueryList<NzOptionComponent>;\r\n    listOfNzOptionGroupComponent: QueryList<NzOptionGroupComponent>;\r\n    nzOptionGroupComponentElement: ElementRef;\r\n    nzSelectTopControlComponentElement: ElementRef;\r\n    private listOfValue$;\r\n    private listOfTemplateItem$;\r\n    private listOfTagAndTemplateItem;\r\n    private searchValue;\r\n    private isReactiveDriven;\r\n    private value;\r\n    private _nzShowArrow;\r\n    private requestId;\r\n    onChange: OnChangeType;\r\n    onTouched: OnTouchedType;\r\n    dropDownPosition: 'top' | 'center' | 'bottom';\r\n    triggerWidth: number | null;\r\n    listOfContainerItem: NzSelectItemInterface[];\r\n    listOfTopItem: NzSelectItemInterface[];\r\n    activatedValue: NzSafeAny | null;\r\n    listOfValue: NzSafeAny[];\r\n    focused: boolean;\r\n    dir: Direction;\r\n    generateTagItem(value: string): NzSelectItemInterface;\r\n    onItemClick(value: NzSafeAny): void;\r\n    onItemDelete(item: NzSelectItemInterface): void;\r\n    onHostClick(): void;\r\n    updateListOfContainerItem(): void;\r\n    clearInput(): void;\r\n    updateListOfValue(listOfValue: NzSafeAny[]): void;\r\n    onTokenSeparate(listOfLabel: string[]): void;\r\n    onOverlayKeyDown(e: KeyboardEvent): void;\r\n    onKeyDown(e: KeyboardEvent): void;\r\n    setOpenState(value: boolean): void;\r\n    onOpenChange(): void;\r\n    onInputValueChange(value: string): void;\r\n    onClearSelection(): void;\r\n    onClickOutside(event: MouseEvent): void;\r\n    focus(): void;\r\n    blur(): void;\r\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\r\n    updateCdkConnectedOverlayStatus(): void;\r\n    updateCdkConnectedOverlayPositions(): void;\r\n    constructor(destroy$: NzDestroyService, nzConfigService: NzConfigService, cdr: ChangeDetectorRef, elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\r\n    writeValue(modelValue: NzSafeAny | NzSafeAny[]): void;\r\n    registerOnChange(fn: OnChangeType): void;\r\n    registerOnTouched(fn: OnTouchedType): void;\r\n    setDisabledState(disabled: boolean): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}