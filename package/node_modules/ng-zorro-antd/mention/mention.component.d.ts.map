{"version":3,"file":"mention.component.d.ts","sources":["mention.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzMentionTriggerDirective } from './mention-trigger';\r\nimport { NzMentionService } from './mention.service';\r\nexport interface MentionOnSearchTypes {\r\n    value: string;\r\n    prefix: string;\r\n}\r\nexport interface Mention {\r\n    startPos: number;\r\n    endPos: number;\r\n    mention: string;\r\n}\r\nexport declare type MentionPlacement = 'top' | 'bottom';\r\nexport declare class NzMentionComponent implements OnDestroy, OnInit, AfterViewInit, OnChanges {\r\n    private ngZone;\r\n    private ngDocument;\r\n    private cdr;\r\n    private overlay;\r\n    private viewContainerRef;\r\n    private nzMentionService;\r\n    static ngAcceptInputType_nzLoading: BooleanInput;\r\n    nzValueWith: (value: NzSafeAny) => string;\r\n    nzPrefix: string | string[];\r\n    nzLoading: boolean;\r\n    nzNotFoundContent: string;\r\n    nzPlacement: MentionPlacement;\r\n    nzSuggestions: NzSafeAny[];\r\n    readonly nzOnSelect: EventEmitter<NzSafeAny>;\r\n    readonly nzOnSearchChange: EventEmitter<MentionOnSearchTypes>;\r\n    trigger: NzMentionTriggerDirective;\r\n    suggestionsTemp?: TemplateRef<void>;\r\n    items: QueryList<ElementRef>;\r\n    set suggestionChild(value: TemplateRef<{\r\n        $implicit: NzSafeAny;\r\n    }>);\r\n    isOpen: boolean;\r\n    filteredSuggestions: string[];\r\n    suggestionTemplate: TemplateRef<{\r\n        $implicit: NzSafeAny;\r\n    }> | null;\r\n    activeIndex: number;\r\n    private previousValue;\r\n    private cursorMention;\r\n    private cursorMentionStart?;\r\n    private cursorMentionEnd?;\r\n    private overlayRef;\r\n    private portal?;\r\n    private positionStrategy;\r\n    private overlayOutsideClickSubscription;\r\n    private get triggerNativeElement();\r\n    private get focusItemElement();\r\n    constructor(ngZone: NgZone, ngDocument: NzSafeAny, cdr: ChangeDetectorRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzMentionService: NzMentionService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    closeDropdown(): void;\r\n    openDropdown(): void;\r\n    getMentions(): string[];\r\n    selectSuggestion(suggestion: string | {}): void;\r\n    private handleInput;\r\n    private handleKeydown;\r\n    private handleClick;\r\n    private bindTriggerEvents;\r\n    private suggestionsFilter;\r\n    private resetDropdown;\r\n    private setNextItemActive;\r\n    private setPreviousItemActive;\r\n    private scrollToFocusItem;\r\n    private canOpen;\r\n    private resetCursorMention;\r\n    private updatePositions;\r\n    private subscribeOverlayOutsideClick;\r\n    private attachOverlay;\r\n    private getOverlayConfig;\r\n    private getOverlayPosition;\r\n}\r\n"]}