{"version":3,"file":"mention-trigger.d.ts","sources":["mention-trigger.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { AfterViewInit, ElementRef, EventEmitter, ExistingProvider, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { Mention } from './mention.component';\r\nimport { NzMentionService } from './mention.service';\r\nexport declare const NZ_MENTION_TRIGGER_ACCESSOR: ExistingProvider;\r\nexport declare class NzMentionTriggerDirective implements ControlValueAccessor, OnDestroy, AfterViewInit {\r\n    el: ElementRef;\r\n    private nzMentionService;\r\n    onChange: OnChangeType;\r\n    onTouched: OnTouchedType;\r\n    readonly onFocusin: EventEmitter<void>;\r\n    readonly onBlur: EventEmitter<void>;\r\n    readonly onInput: EventEmitter<KeyboardEvent>;\r\n    readonly onKeydown: EventEmitter<KeyboardEvent>;\r\n    readonly onClick: EventEmitter<MouseEvent>;\r\n    value?: string;\r\n    constructor(el: ElementRef, nzMentionService: NzMentionService);\r\n    completeEvents(): void;\r\n    focus(caretPos?: number): void;\r\n    insertMention(mention: Mention): void;\r\n    writeValue(value: string): void;\r\n    registerOnChange(fn: (value: string) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}