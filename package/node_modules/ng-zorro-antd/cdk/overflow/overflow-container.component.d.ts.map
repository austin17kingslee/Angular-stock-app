{"version":3,"file":"overflow-container.component.d.ts","sources":["overflow-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { QueryList, ElementRef, OnInit, AfterContentInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\r\nimport { NzOverflowItemDirective } from './overflow-item.directive';\r\nimport { NzOverflowRestDirective } from './overflow-rest.directive';\r\nimport { NzOverflowSuffixDirective } from './overflow-suffix.directive';\r\nexport declare class NzOverflowContainerComponent implements OnInit, AfterContentInit, OnDestroy {\r\n    private nzResizeObserver;\r\n    private elementRef;\r\n    private cdr;\r\n    contentInit$: Subject<void>;\r\n    overflowItems: QueryList<NzOverflowItemDirective> | undefined;\r\n    overflowSuffix: NzOverflowSuffixDirective | undefined;\r\n    overflowRest: NzOverflowRestDirective | undefined;\r\n    overflowItems$: ReplaySubject<QueryList<NzOverflowItemDirective>>;\r\n    destroy$: Subject<void>;\r\n    containerWidth$: Observable<number>;\r\n    restWidth$: BehaviorSubject<number>;\r\n    suffixWidth$: BehaviorSubject<number>;\r\n    suffixFixedStart$: BehaviorSubject<number | null>;\r\n    displayCount$: BehaviorSubject<number>;\r\n    restReady$: BehaviorSubject<boolean>;\r\n    maxRestWith$: Observable<number>;\r\n    omittedItems$: Observable<NzOverflowItemDirective[]>;\r\n    displayRest$: Observable<boolean>;\r\n    updateDisplayCount(count: number, notReady?: boolean): void;\r\n    constructor(nzResizeObserver: NzResizeObserver, elementRef: ElementRef, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}