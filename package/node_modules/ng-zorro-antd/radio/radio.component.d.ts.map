{"version":3,"file":"radio.component.d.ts","sources":["radio.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { NzRadioButtonDirective } from './radio-button.directive';\r\nimport { NzRadioService } from './radio.service';\r\nexport declare class NzRadioComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\r\n    private ngZone;\r\n    private elementRef;\r\n    private cdr;\r\n    private focusMonitor;\r\n    private directionality;\r\n    private nzRadioService;\r\n    private nzRadioButtonDirective;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\r\n    private isNgModel;\r\n    private destroy$;\r\n    isChecked: boolean;\r\n    name: string | null;\r\n    isRadioButton: boolean;\r\n    onChange: OnChangeType;\r\n    onTouched: OnTouchedType;\r\n    inputElement?: ElementRef;\r\n    nzValue: NzSafeAny | null;\r\n    nzDisabled: boolean;\r\n    nzAutoFocus: boolean;\r\n    dir: Direction;\r\n    focus(): void;\r\n    blur(): void;\r\n    constructor(ngZone: NgZone, elementRef: ElementRef, cdr: ChangeDetectorRef, focusMonitor: FocusMonitor, directionality: Directionality, nzRadioService: NzRadioService, nzRadioButtonDirective: NzRadioButtonDirective);\r\n    setDisabledState(disabled: boolean): void;\r\n    writeValue(value: boolean): void;\r\n    registerOnChange(fn: OnChangeType): void;\r\n    registerOnTouched(fn: OnTouchedType): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    private setupClickListener;\r\n}\r\n"]}