{"version":3,"file":"typography.component.d.ts","sources":["typography.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EmbeddedViewRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\r\nimport { BooleanInput, NumberInput, NzSafeAny, NzTSType } from 'ng-zorro-antd/core/types';\r\nimport { NzI18nService, NzTextI18nInterface } from 'ng-zorro-antd/i18n';\r\nimport { NzTextCopyComponent } from './text-copy.component';\r\nimport { NzTextEditComponent } from './text-edit.component';\r\nexport declare class NzTypographyComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    nzConfigService: NzConfigService;\r\n    private host;\r\n    private cdr;\r\n    private viewContainerRef;\r\n    private renderer;\r\n    private platform;\r\n    private i18n;\r\n    private resizeService;\r\n    private directionality;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzCopyable: BooleanInput;\r\n    static ngAcceptInputType_nzEditable: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzExpandable: BooleanInput;\r\n    static ngAcceptInputType_nzEllipsis: BooleanInput;\r\n    static ngAcceptInputType_nzEllipsisRows: NumberInput;\r\n    nzCopyable: boolean;\r\n    nzEditable: boolean;\r\n    nzDisabled: boolean;\r\n    nzExpandable: boolean;\r\n    nzEllipsis: boolean;\r\n    nzCopyTooltips?: [NzTSType, NzTSType] | null;\r\n    nzCopyIcons: [NzTSType, NzTSType];\r\n    nzEditTooltip?: null | NzTSType;\r\n    nzEditIcon: NzTSType;\r\n    nzContent?: string;\r\n    nzEllipsisRows: number;\r\n    nzType: 'secondary' | 'warning' | 'danger' | 'success' | undefined;\r\n    nzCopyText: string | undefined;\r\n    nzSuffix: string | undefined;\r\n    readonly nzContentChange: EventEmitter<string>;\r\n    readonly nzCopy: EventEmitter<string>;\r\n    readonly nzExpandChange: EventEmitter<void>;\r\n    readonly nzOnEllipsis: EventEmitter<boolean>;\r\n    textEditRef?: NzTextEditComponent;\r\n    textCopyRef?: NzTextCopyComponent;\r\n    ellipsisContainer?: ElementRef<HTMLSpanElement>;\r\n    expandableBtn?: ElementRef<HTMLSpanElement>;\r\n    contentTemplate?: TemplateRef<{\r\n        content: string;\r\n    }>;\r\n    locale: NzTextI18nInterface;\r\n    document: Document;\r\n    expandableBtnElementCache: HTMLElement | null;\r\n    editing: boolean;\r\n    ellipsisText: string | undefined;\r\n    cssEllipsis: boolean;\r\n    isEllipsis: boolean;\r\n    expanded: boolean;\r\n    ellipsisStr: string;\r\n    dir: Direction;\r\n    get hasEllipsisObservers(): boolean;\r\n    get canCssEllipsis(): boolean;\r\n    get hasOperationsWithEllipsis(): boolean;\r\n    private viewInit;\r\n    private rfaId;\r\n    private destroy$;\r\n    private windowResizeSubscription;\r\n    get copyText(): string;\r\n    constructor(nzConfigService: NzConfigService, host: ElementRef<HTMLElement>, cdr: ChangeDetectorRef, viewContainerRef: ViewContainerRef, renderer: Renderer2, platform: Platform, i18n: NzI18nService, document: NzSafeAny, resizeService: NzResizeService, directionality: Directionality);\r\n    onTextCopy(text: string): void;\r\n    onStartEditing(): void;\r\n    onEndEditing(text: string): void;\r\n    onExpand(): void;\r\n    canUseCSSEllipsis(): boolean;\r\n    renderOnNextFrame(): void;\r\n    getOriginContentViewRef(): {\r\n        viewRef: EmbeddedViewRef<{\r\n            content: string;\r\n        }>;\r\n        removeView(): void;\r\n    };\r\n    syncEllipsis(): void;\r\n    private getExpandableBtnElement;\r\n    private renderAndSubscribeWindowResize;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}