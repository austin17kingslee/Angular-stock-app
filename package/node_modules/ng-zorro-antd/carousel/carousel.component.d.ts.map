{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzDragService, NzResizeService } from 'ng-zorro-antd/core/services';\r\nimport { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzCarouselContentDirective } from './carousel-content.directive';\r\nimport { NzCarouselBaseStrategy } from './strategies/base-strategy';\r\nimport { FromToInterface, NzCarouselDotPosition, NzCarouselEffects, NzCarouselStrategyRegistryItem } from './typings';\r\nexport declare class NzCarouselComponent implements AfterContentInit, AfterViewInit, OnDestroy, OnChanges, OnInit {\r\n    readonly nzConfigService: NzConfigService;\r\n    private readonly ngZone;\r\n    private readonly renderer;\r\n    private readonly cdr;\r\n    private readonly platform;\r\n    private readonly resizeService;\r\n    private readonly nzDragService;\r\n    private directionality;\r\n    private customStrategies;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzEnableSwipe: BooleanInput;\r\n    static ngAcceptInputType_nzDots: BooleanInput;\r\n    static ngAcceptInputType_nzAutoPlay: BooleanInput;\r\n    static ngAcceptInputType_nzAutoPlaySpeed: NumberInput;\r\n    static ngAcceptInputType_nzTransitionSpeed: NumberInput;\r\n    carouselContents: QueryList<NzCarouselContentDirective>;\r\n    slickList: ElementRef<HTMLElement>;\r\n    slickTrack: ElementRef<HTMLElement>;\r\n    nzDotRender?: TemplateRef<{\r\n        $implicit: number;\r\n    }>;\r\n    nzEffect: NzCarouselEffects;\r\n    nzEnableSwipe: boolean;\r\n    nzDots: boolean;\r\n    nzAutoPlay: boolean;\r\n    nzAutoPlaySpeed: number;\r\n    nzTransitionSpeed: number;\r\n    /**\r\n     * this property is passed directly to an NzCarouselBaseStrategy\r\n     */\r\n    nzStrategyOptions: NzSafeAny;\r\n    set nzDotPosition(value: NzCarouselDotPosition);\r\n    get nzDotPosition(): NzCarouselDotPosition;\r\n    private _dotPosition;\r\n    readonly nzBeforeChange: EventEmitter<FromToInterface>;\r\n    readonly nzAfterChange: EventEmitter<number>;\r\n    activeIndex: number;\r\n    el: HTMLElement;\r\n    slickListEl: HTMLElement;\r\n    slickTrackEl: HTMLElement;\r\n    strategy?: NzCarouselBaseStrategy;\r\n    vertical: boolean;\r\n    transitionInProgress: number | null;\r\n    dir: Direction;\r\n    private destroy$;\r\n    private gestureRect;\r\n    private pointerDelta;\r\n    private isTransiting;\r\n    private isDragging;\r\n    constructor(elementRef: ElementRef, nzConfigService: NzConfigService, ngZone: NgZone, renderer: Renderer2, cdr: ChangeDetectorRef, platform: Platform, resizeService: NzResizeService, nzDragService: NzDragService, directionality: Directionality, customStrategies: NzCarouselStrategyRegistryItem[]);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    onLiClick: (index: number) => void;\r\n    next(): void;\r\n    pre(): void;\r\n    goTo(index: number): void;\r\n    private switchStrategy;\r\n    private scheduleNextTransition;\r\n    private clearScheduledTransition;\r\n    private markContentActive;\r\n    /**\r\n     * Drag carousel.\r\n     */\r\n    pointerDown: (event: TouchEvent | MouseEvent) => void;\r\n    layout(): void;\r\n}\r\n"]}