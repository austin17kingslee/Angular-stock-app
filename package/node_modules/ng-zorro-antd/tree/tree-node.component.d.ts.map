{"version":3,"file":"tree-node.component.d.ts","sources":["tree-node.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, TemplateRef } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\r\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\r\nexport declare class NzTreeNodeBuiltinComponent implements OnInit, OnChanges, OnDestroy {\r\n    nzTreeService: NzTreeBaseService;\r\n    private ngZone;\r\n    private renderer;\r\n    private elementRef;\r\n    private cdr;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    static ngAcceptInputType_nzShowLine: BooleanInput;\r\n    static ngAcceptInputType_nzShowExpand: BooleanInput;\r\n    static ngAcceptInputType_nzCheckable: BooleanInput;\r\n    static ngAcceptInputType_nzAsyncData: BooleanInput;\r\n    static ngAcceptInputType_nzHideUnMatched: BooleanInput;\r\n    static ngAcceptInputType_nzNoAnimation: BooleanInput;\r\n    static ngAcceptInputType_nzSelectMode: BooleanInput;\r\n    static ngAcceptInputType_nzShowIcon: BooleanInput;\r\n    /**\r\n     * for global property\r\n     */\r\n    icon: string;\r\n    title: string;\r\n    isLoading: boolean;\r\n    isSelected: boolean;\r\n    isDisabled: boolean;\r\n    isMatched: boolean;\r\n    isExpanded: boolean;\r\n    isLeaf: boolean;\r\n    isChecked?: boolean;\r\n    isHalfChecked?: boolean;\r\n    isDisableCheckbox?: boolean;\r\n    isSelectable?: boolean;\r\n    canHide?: boolean;\r\n    isStart: boolean[];\r\n    isEnd: boolean[];\r\n    nzTreeNode: NzTreeNode;\r\n    nzShowLine?: boolean;\r\n    nzShowExpand?: boolean;\r\n    nzCheckable?: boolean;\r\n    nzAsyncData?: boolean;\r\n    nzHideUnMatched: boolean;\r\n    nzNoAnimation: boolean;\r\n    nzSelectMode: boolean;\r\n    nzShowIcon: boolean;\r\n    nzExpandedIcon?: TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }>;\r\n    nzTreeTemplate: TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }> | null;\r\n    nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n    nzSearchValue: string;\r\n    nzDraggable: boolean;\r\n    readonly nzClick: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzDblClick: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzContextMenu: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzCheckBoxChange: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzExpandChange: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDragStart: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDragEnter: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDragOver: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDragLeave: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDrop: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzOnDragEnd: EventEmitter<NzFormatEmitEvent>;\r\n    /**\r\n     * drag var\r\n     */\r\n    destroy$: Subject<unknown>;\r\n    dragPos: number;\r\n    dragPosClass: {\r\n        [key: string]: string;\r\n    };\r\n    showIndicator: boolean;\r\n    /**\r\n     * default set\r\n     */\r\n    get displayStyle(): string;\r\n    get isSwitcherOpen(): boolean;\r\n    get isSwitcherClose(): boolean;\r\n    /**\r\n     * collapse node\r\n     *\r\n     * @param event\r\n     */\r\n    clickExpand(event: MouseEvent): void;\r\n    clickSelect(event: MouseEvent): void;\r\n    dblClick(event: MouseEvent): void;\r\n    contextMenu(event: MouseEvent): void;\r\n    /**\r\n     * check node\r\n     *\r\n     * @param event\r\n     */\r\n    clickCheckBox(event: MouseEvent): void;\r\n    clearDragClass(): void;\r\n    /**\r\n     * drag event\r\n     *\r\n     * @param e\r\n     */\r\n    handleDragStart(e: DragEvent): void;\r\n    handleDragEnter(e: DragEvent): void;\r\n    handleDragOver(e: DragEvent): void;\r\n    handleDragLeave(e: DragEvent): void;\r\n    handleDragDrop(e: DragEvent): void;\r\n    handleDragEnd(e: DragEvent): void;\r\n    /**\r\n     * Listening to dragging events.\r\n     */\r\n    handDragEvent(): void;\r\n    markForCheck(): void;\r\n    constructor(nzTreeService: NzTreeBaseService, ngZone: NgZone, renderer: Renderer2, elementRef: ElementRef<HTMLElement>, cdr: ChangeDetectorRef, noAnimation?: NzNoAnimationDirective | undefined);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: {\r\n        [propertyName: string]: SimpleChange;\r\n    }): void;\r\n    ngOnDestroy(): void;\r\n    private renderIndicator;\r\n}\r\n"]}