{"version":3,"file":"image.directive.d.ts","sources":["image.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzImageGroupComponent } from './image-group.component';\r\nimport { NzImageService } from './image.service';\r\nexport declare type ImageStatusType = 'error' | 'loading' | 'normal';\r\nexport declare class NzImageDirective implements OnInit, OnChanges, OnDestroy {\r\n    private document;\r\n    nzConfigService: NzConfigService;\r\n    private elementRef;\r\n    private nzImageService;\r\n    protected cdr: ChangeDetectorRef;\r\n    private parentGroup;\r\n    private directionality;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzDisablePreview: BooleanInput;\r\n    nzSrc: string;\r\n    nzSrcset: string;\r\n    nzDisablePreview: boolean;\r\n    nzFallback: string | null;\r\n    nzPlaceholder: string | null;\r\n    dir?: Direction;\r\n    backLoadImage: HTMLImageElement;\r\n    private status;\r\n    private destroy$;\r\n    get previewable(): boolean;\r\n    constructor(document: NzSafeAny, nzConfigService: NzConfigService, elementRef: ElementRef, nzImageService: NzImageService, cdr: ChangeDetectorRef, parentGroup: NzImageGroupComponent, directionality: Directionality);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    onPreview(): void;\r\n    getElement(): ElementRef<HTMLImageElement>;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * use internal Image object handle fallback & placeholder\r\n     *\r\n     * @private\r\n     */\r\n    private backLoad;\r\n}\r\n"]}