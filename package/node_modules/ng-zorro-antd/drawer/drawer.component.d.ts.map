{"version":3,"file":"drawer.component.d.ts","sources":["drawer.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\r\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\r\nimport { AfterViewInit, ChangeDetectorRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef, Type, ViewContainerRef } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { BooleanInput, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzDrawerOptionsOfComponent, NzDrawerPlacement } from './drawer-options';\r\nimport { NzDrawerRef } from './drawer-ref';\r\nexport declare const DRAWER_ANIMATE_DURATION = 300;\r\nexport declare class NzDrawerComponent<T = NzSafeAny, R = NzSafeAny, D = NzSafeAny> extends NzDrawerRef<T, R> implements OnInit, OnDestroy, AfterViewInit, OnChanges, NzDrawerOptionsOfComponent {\r\n    private cdr;\r\n    private document;\r\n    nzConfigService: NzConfigService;\r\n    private renderer;\r\n    private overlay;\r\n    private injector;\r\n    private changeDetectorRef;\r\n    private focusTrapFactory;\r\n    private viewContainerRef;\r\n    private overlayKeyboardDispatcher;\r\n    private directionality;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzClosable: BooleanInput;\r\n    static ngAcceptInputType_nzMaskClosable: BooleanInput;\r\n    static ngAcceptInputType_nzMask: BooleanInput;\r\n    static ngAcceptInputType_nzNoAnimation: BooleanInput;\r\n    static ngAcceptInputType_nzKeyboard: BooleanInput;\r\n    static ngAcceptInputType_nzCloseOnNavigation: BooleanInput;\r\n    nzContent: TemplateRef<{\r\n        $implicit: D;\r\n        drawerRef: NzDrawerRef<R>;\r\n    }> | Type<T>;\r\n    nzCloseIcon: string | TemplateRef<void>;\r\n    nzClosable: boolean;\r\n    nzMaskClosable: boolean;\r\n    nzMask: boolean;\r\n    nzCloseOnNavigation: boolean;\r\n    nzNoAnimation: boolean;\r\n    nzKeyboard: boolean;\r\n    nzTitle?: string | TemplateRef<{}>;\r\n    nzFooter?: string | TemplateRef<{}>;\r\n    nzPlacement: NzDrawerPlacement;\r\n    nzMaskStyle: NgStyleInterface;\r\n    nzBodyStyle: NgStyleInterface;\r\n    nzWrapClassName?: string;\r\n    nzWidth: number | string;\r\n    nzHeight: number | string;\r\n    nzZIndex: number;\r\n    nzOffsetX: number;\r\n    nzOffsetY: number;\r\n    private componentInstance;\r\n    set nzVisible(value: boolean);\r\n    get nzVisible(): boolean;\r\n    readonly nzOnViewInit: EventEmitter<void>;\r\n    readonly nzOnClose: EventEmitter<MouseEvent>;\r\n    readonly nzVisibleChange: EventEmitter<boolean>;\r\n    drawerTemplate: TemplateRef<void>;\r\n    bodyPortalOutlet?: CdkPortalOutlet;\r\n    contentFromContentChild?: TemplateRef<NzSafeAny>;\r\n    private destroy$;\r\n    previouslyFocusedElement?: HTMLElement;\r\n    placementChanging: boolean;\r\n    placementChangeTimeoutId: number;\r\n    nzContentParams?: D;\r\n    overlayRef?: OverlayRef | null;\r\n    portal?: TemplatePortal;\r\n    focusTrap?: FocusTrap;\r\n    isOpen: boolean;\r\n    inAnimation: boolean;\r\n    templateContext: {\r\n        $implicit: D | undefined;\r\n        drawerRef: NzDrawerRef<R>;\r\n    };\r\n    get offsetTransform(): string | null;\r\n    get transform(): string | null;\r\n    get width(): string | null;\r\n    get height(): string | null;\r\n    get isLeftOrRight(): boolean;\r\n    nzAfterOpen: Subject<void>;\r\n    nzAfterClose: Subject<R>;\r\n    get afterOpen(): Observable<void>;\r\n    get afterClose(): Observable<R>;\r\n    isTemplateRef(value: {}): boolean;\r\n    nzDirection?: Direction;\r\n    dir: Direction;\r\n    constructor(cdr: ChangeDetectorRef, document: NzSafeAny, nzConfigService: NzConfigService, renderer: Renderer2, overlay: Overlay, injector: Injector, changeDetectorRef: ChangeDetectorRef, focusTrapFactory: FocusTrapFactory, viewContainerRef: ViewContainerRef, overlayKeyboardDispatcher: OverlayKeyboardDispatcher, directionality: Directionality);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    private getAnimationDuration;\r\n    private triggerPlacementChangeCycleOnce;\r\n    close(result?: R): void;\r\n    open(): void;\r\n    getContentComponent(): T | null;\r\n    closeClick(): void;\r\n    maskClick(): void;\r\n    private attachBodyContent;\r\n    private attachOverlay;\r\n    private disposeOverlay;\r\n    private getOverlayConfig;\r\n    private updateOverlayStyle;\r\n    private updateBodyOverflow;\r\n    savePreviouslyFocusedElement(): void;\r\n    private trapFocus;\r\n    private restoreFocus;\r\n}\r\n"]}