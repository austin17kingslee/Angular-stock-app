{"version":3,"file":"tree-select.component.d.ts","sources":["tree-select.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzFormatEmitEvent, NzTreeBase, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\r\nimport { BooleanInput, NgStyleInterface, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { NzSelectSearchComponent } from 'ng-zorro-antd/select';\r\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\r\nimport { NzTreeSelectService } from './tree-select.service';\r\nexport declare function higherOrderServiceFactory(injector: Injector): NzTreeBaseService;\r\nexport declare class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n    nzConfigService: NzConfigService;\r\n    private renderer;\r\n    private cdr;\r\n    private elementRef;\r\n    private directionality;\r\n    private focusMonitor;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\r\n    static ngAcceptInputType_nzShowExpand: BooleanInput;\r\n    static ngAcceptInputType_nzShowLine: BooleanInput;\r\n    static ngAcceptInputType_nzDropdownMatchSelectWidth: BooleanInput;\r\n    static ngAcceptInputType_nzCheckable: BooleanInput;\r\n    static ngAcceptInputType_nzHideUnMatched: BooleanInput;\r\n    static ngAcceptInputType_nzShowIcon: BooleanInput;\r\n    static ngAcceptInputType_nzShowSearch: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzAsyncData: BooleanInput;\r\n    static ngAcceptInputType_nzMultiple: BooleanInput;\r\n    static ngAcceptInputType_nzDefaultExpandAll: BooleanInput;\r\n    static ngAcceptInputType_nzCheckStrictly: BooleanInput;\r\n    nzId: string | null;\r\n    nzAllowClear: boolean;\r\n    nzShowExpand: boolean;\r\n    nzShowLine: boolean;\r\n    nzDropdownMatchSelectWidth: boolean;\r\n    nzCheckable: boolean;\r\n    nzHideUnMatched: boolean;\r\n    nzShowIcon: boolean;\r\n    nzShowSearch: boolean;\r\n    nzDisabled: boolean;\r\n    nzAsyncData: boolean;\r\n    nzMultiple: boolean;\r\n    nzDefaultExpandAll: boolean;\r\n    nzCheckStrictly: boolean;\r\n    nzVirtualItemSize: number;\r\n    nzVirtualMaxBufferPx: number;\r\n    nzVirtualMinBufferPx: number;\r\n    nzVirtualHeight: string | null;\r\n    nzExpandedIcon?: TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }>;\r\n    nzNotFoundContent?: string;\r\n    nzNodes: Array<NzTreeNode | NzTreeNodeOptions>;\r\n    nzOpen: boolean;\r\n    nzSize: NzSizeLDSType;\r\n    nzPlaceHolder: string;\r\n    nzDropdownStyle: NgStyleInterface | null;\r\n    nzDropdownClassName?: string;\r\n    nzBackdrop: boolean;\r\n    set nzExpandedKeys(value: string[]);\r\n    get nzExpandedKeys(): string[];\r\n    nzDisplayWith: (node: NzTreeNode) => string | undefined;\r\n    nzMaxTagCount: number;\r\n    nzMaxTagPlaceholder: TemplateRef<{\r\n        $implicit: NzTreeNode[];\r\n    }> | null;\r\n    readonly nzOpenChange: EventEmitter<boolean>;\r\n    readonly nzCleared: EventEmitter<void>;\r\n    readonly nzRemoved: EventEmitter<NzTreeNode>;\r\n    readonly nzExpandChange: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzTreeClick: EventEmitter<NzFormatEmitEvent>;\r\n    readonly nzTreeCheckBoxChange: EventEmitter<NzFormatEmitEvent>;\r\n    nzSelectSearchComponent: NzSelectSearchComponent;\r\n    treeRef: NzTreeComponent;\r\n    cdkOverlayOrigin: CdkOverlayOrigin;\r\n    cdkConnectedOverlay: CdkConnectedOverlay;\r\n    nzTreeTemplate: TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }>;\r\n    nzTreeTemplateChild: TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }>;\r\n    get treeTemplate(): TemplateRef<{\r\n        $implicit: NzTreeNode;\r\n        origin: NzTreeNodeOptions;\r\n    }>;\r\n    dropdownClassName: string;\r\n    triggerWidth?: number;\r\n    isComposing: boolean;\r\n    isDestroy: boolean;\r\n    isNotFound: boolean;\r\n    focused: boolean;\r\n    inputValue: string;\r\n    dropDownPosition: 'top' | 'center' | 'bottom';\r\n    selectedNodes: NzTreeNode[];\r\n    expandedKeys: string[];\r\n    value: string[];\r\n    dir: Direction;\r\n    private destroy$;\r\n    onChange: OnChangeType;\r\n    onTouched: OnTouchedType;\r\n    get placeHolderDisplay(): string;\r\n    get isMultiple(): boolean;\r\n    constructor(nzTreeService: NzTreeSelectService, nzConfigService: NzConfigService, renderer: Renderer2, cdr: ChangeDetectorRef, elementRef: ElementRef, directionality: Directionality, focusMonitor: FocusMonitor, noAnimation?: NzNoAnimationDirective | undefined);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    isComposingChange(isComposing: boolean): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    writeValue(value: string[] | string): void;\r\n    registerOnChange(fn: (_: string[] | string | null) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    onKeydown(event: KeyboardEvent): void;\r\n    trigger(): void;\r\n    openDropdown(): void;\r\n    closeDropDown(): void;\r\n    onKeyDownInput(e: KeyboardEvent): void;\r\n    onExpandedKeysChange(value: NzFormatEmitEvent): void;\r\n    setInputValue(value: string): void;\r\n    removeSelected(node: NzTreeNode, emit?: boolean): void;\r\n    focusOnInput(): void;\r\n    subscribeSelectionChange(): void;\r\n    updateSelectedNodes(init?: boolean): void;\r\n    updatePosition(): void;\r\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\r\n    onClearSelection(): void;\r\n    onClickOutside(event: MouseEvent): void;\r\n    setSearchValues($event: NzFormatEmitEvent): void;\r\n    updateCdkConnectedOverlayStatus(): void;\r\n    trackValue(_index: number, option: NzTreeNode): string;\r\n}\r\n"]}