{"version":3,"file":"autocomplete-trigger.directive.d.ts","sources":["autocomplete-trigger.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { AfterViewInit, ElementRef, ExistingProvider, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { NzInputGroupWhitSuffixOrPrefixDirective } from 'ng-zorro-antd/input';\r\nimport { NzAutocompleteOptionComponent } from './autocomplete-option.component';\r\nimport { NzAutocompleteComponent } from './autocomplete.component';\r\nexport declare const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider;\r\nexport declare function getNzAutocompleteMissingPanelError(): Error;\r\nexport declare class NzAutocompleteTriggerDirective implements AfterViewInit, ControlValueAccessor, OnDestroy {\r\n    private elementRef;\r\n    private overlay;\r\n    private viewContainerRef;\r\n    private nzInputGroupWhitSuffixOrPrefixDirective;\r\n    private document;\r\n    /** Bind nzAutocomplete component */\r\n    nzAutocomplete: NzAutocompleteComponent;\r\n    onChange: OnChangeType;\r\n    onTouched: OnTouchedType;\r\n    panelOpen: boolean;\r\n    /** Current active option */\r\n    get activeOption(): NzAutocompleteOptionComponent | null;\r\n    private destroy$;\r\n    private overlayRef;\r\n    private portal;\r\n    private positionStrategy;\r\n    private previousValue;\r\n    private selectionChangeSubscription;\r\n    private optionsChangeSubscription;\r\n    private overlayOutsideClickSubscription;\r\n    constructor(elementRef: ElementRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective: NzInputGroupWhitSuffixOrPrefixDirective, document: NzSafeAny);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    writeValue(value: NzSafeAny): void;\r\n    registerOnChange(fn: (value: {}) => {}): void;\r\n    registerOnTouched(fn: () => {}): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    openPanel(): void;\r\n    closePanel(): void;\r\n    handleKeydown(event: KeyboardEvent): void;\r\n    handleInput(event: KeyboardEvent): void;\r\n    handleFocus(): void;\r\n    handleBlur(): void;\r\n    /**\r\n     * Subscription data source changes event\r\n     */\r\n    private subscribeOptionsChange;\r\n    /**\r\n     * Subscription option changes event and set the value\r\n     */\r\n    private subscribeSelectionChange;\r\n    private subscribeOverlayOutsideClick;\r\n    private attachOverlay;\r\n    private updateStatus;\r\n    private destroyPanel;\r\n    private getOverlayConfig;\r\n    private getConnectedElement;\r\n    private getHostWidth;\r\n    private getOverlayPosition;\r\n    private resetActiveItem;\r\n    private setValueAndClose;\r\n    private setTriggerValue;\r\n    private doBackfill;\r\n    private canOpen;\r\n}\r\n"]}