{"version":3,"file":"autocomplete.component.d.ts","sources":["autocomplete.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { BooleanInput, CompareWith, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './autocomplete-option.component';\r\nexport interface AutocompleteDataSourceItem {\r\n    value: string;\r\n    label: string;\r\n}\r\nexport declare type AutocompleteDataSource = Array<AutocompleteDataSourceItem | string | number>;\r\nexport declare class NzAutocompleteComponent implements AfterContentInit, AfterViewInit, OnDestroy, OnInit {\r\n    private changeDetectorRef;\r\n    private ngZone;\r\n    private directionality;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    static ngAcceptInputType_nzDefaultActiveFirstOption: BooleanInput;\r\n    static ngAcceptInputType_nzBackfill: BooleanInput;\r\n    nzWidth?: number;\r\n    nzOverlayClassName: string;\r\n    nzOverlayStyle: {\r\n        [key: string]: string;\r\n    };\r\n    nzDefaultActiveFirstOption: boolean;\r\n    nzBackfill: boolean;\r\n    compareWith: CompareWith;\r\n    nzDataSource?: AutocompleteDataSource;\r\n    readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent>;\r\n    showPanel: boolean;\r\n    isOpen: boolean;\r\n    activeItem: NzAutocompleteOptionComponent | null;\r\n    dir: Direction;\r\n    private destroy$;\r\n    animationStateChange: EventEmitter<AnimationEvent>;\r\n    /**\r\n     * Options accessor, its source may be content or dataSource\r\n     */\r\n    get options(): QueryList<NzAutocompleteOptionComponent>;\r\n    /** Provided by content */\r\n    fromContentOptions: QueryList<NzAutocompleteOptionComponent>;\r\n    /** Provided by dataSource */\r\n    fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\r\n    /** cdk-overlay */\r\n    template?: TemplateRef<{}>;\r\n    panel?: ElementRef;\r\n    content?: ElementRef;\r\n    private activeItemIndex;\r\n    private selectionChangeSubscription;\r\n    private optionMouseEnterSubscription;\r\n    private dataSourceChangeSubscription;\r\n    /** Options changes listener */\r\n    readonly optionSelectionChanges: Observable<NzOptionSelectionChange>;\r\n    readonly optionMouseEnter: Observable<NzAutocompleteOptionComponent>;\r\n    constructor(changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\r\n    ngOnInit(): void;\r\n    onAnimationEvent(event: AnimationEvent): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    setVisibility(): void;\r\n    setActiveItem(index: number): void;\r\n    setNextItemActive(): void;\r\n    setPreviousItemActive(): void;\r\n    getOptionIndex(value: NzSafeAny): number;\r\n    getOption(value: NzSafeAny): NzAutocompleteOptionComponent | null;\r\n    private optionsInit;\r\n    /**\r\n     * Clear the status of options\r\n     */\r\n    clearSelectedOptions(skip?: NzAutocompleteOptionComponent | null, deselect?: boolean): void;\r\n    private subscribeOptionChanges;\r\n}\r\n"]}