{"version":3,"file":"transfer.component.d.ts","sources":["transfer.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BooleanInput, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzI18nService, NzTransferI18nInterface } from 'ng-zorro-antd/i18n';\r\nimport { TransferCanMove, TransferChange, TransferDirection, TransferItem, TransferSearchChange, TransferSelectChange } from './interface';\r\nimport { NzTransferListComponent } from './transfer-list.component';\r\nexport declare class NzTransferComponent implements OnInit, OnChanges, OnDestroy {\r\n    private cdr;\r\n    private i18n;\r\n    private elementRef;\r\n    private directionality;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzShowSelectAll: BooleanInput;\r\n    static ngAcceptInputType_nzShowSearch: BooleanInput;\r\n    private unsubscribe$;\r\n    lists: QueryList<NzTransferListComponent>;\r\n    locale: NzTransferI18nInterface;\r\n    leftFilter: string;\r\n    rightFilter: string;\r\n    dir: Direction;\r\n    nzDisabled: boolean;\r\n    nzDataSource: TransferItem[];\r\n    nzTitles: string[];\r\n    nzOperations: string[];\r\n    nzListStyle: NgStyleInterface;\r\n    nzShowSelectAll: boolean;\r\n    nzItemUnit?: string;\r\n    nzItemsUnit?: string;\r\n    nzCanMove: (arg: TransferCanMove) => Observable<TransferItem[]>;\r\n    nzRenderList: Array<TemplateRef<NzSafeAny> | null> | null;\r\n    nzRender: TemplateRef<NzSafeAny> | null;\r\n    nzFooter: TemplateRef<NzSafeAny> | null;\r\n    nzShowSearch: boolean;\r\n    nzFilterOption?: (inputValue: string, item: TransferItem) => boolean;\r\n    nzSearchPlaceholder?: string;\r\n    nzNotFoundContent?: string;\r\n    nzTargetKeys: string[];\r\n    nzSelectedKeys: string[];\r\n    readonly nzChange: EventEmitter<TransferChange>;\r\n    readonly nzSearchChange: EventEmitter<TransferSearchChange>;\r\n    readonly nzSelectChange: EventEmitter<TransferSelectChange>;\r\n    leftDataSource: TransferItem[];\r\n    rightDataSource: TransferItem[];\r\n    private splitDataSource;\r\n    private getCheckedData;\r\n    handleLeftSelectAll: (checked: boolean) => void;\r\n    handleRightSelectAll: (checked: boolean) => void;\r\n    handleLeftSelect: (item: TransferItem) => void;\r\n    handleRightSelect: (item: TransferItem) => void;\r\n    handleSelect(direction: TransferDirection, checked: boolean, item?: TransferItem): void;\r\n    handleFilterChange(ret: {\r\n        direction: TransferDirection;\r\n        value: string;\r\n    }): void;\r\n    leftActive: boolean;\r\n    rightActive: boolean;\r\n    private updateOperationStatus;\r\n    moveToLeft: () => void;\r\n    moveToRight: () => void;\r\n    moveTo(direction: TransferDirection): void;\r\n    private truthMoveTo;\r\n    constructor(cdr: ChangeDetectorRef, i18n: NzI18nService, elementRef: ElementRef, directionality: Directionality);\r\n    private markForCheckAllList;\r\n    private handleNzTargetKeys;\r\n    private handleNzSelectedKeys;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}