{"version":3,"file":"transfer-list.component.d.ts","sources":["transfer-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { TransferDirection, TransferItem } from './interface';\r\nexport declare class NzTransferListComponent {\r\n    private cdr;\r\n    private elementRef;\r\n    direction: TransferDirection;\r\n    titleText: string;\r\n    showSelectAll: boolean;\r\n    dataSource: TransferItem[];\r\n    itemUnit: string | undefined;\r\n    itemsUnit: string | undefined;\r\n    filter: string;\r\n    disabled: boolean;\r\n    showSearch?: boolean;\r\n    searchPlaceholder?: string;\r\n    notFoundContent?: string;\r\n    filterOption?: (inputValue: string, item: TransferItem) => boolean;\r\n    renderList: TemplateRef<void> | null;\r\n    render: TemplateRef<void> | null;\r\n    footer: TemplateRef<void> | null;\r\n    readonly handleSelectAll: EventEmitter<boolean>;\r\n    readonly handleSelect: EventEmitter<TransferItem>;\r\n    readonly filterChange: EventEmitter<{\r\n        direction: TransferDirection;\r\n        value: string;\r\n    }>;\r\n    stat: {\r\n        checkAll: boolean;\r\n        checkHalf: boolean;\r\n        checkCount: number;\r\n        shownCount: number;\r\n    };\r\n    get validData(): TransferItem[];\r\n    onItemSelect: (item: TransferItem) => void;\r\n    onItemSelectAll: (status: boolean) => void;\r\n    private updateCheckStatus;\r\n    handleFilter(value: string): void;\r\n    handleClear(): void;\r\n    private matchFilter;\r\n    constructor(cdr: ChangeDetectorRef, elementRef: ElementRef);\r\n    markForCheck(): void;\r\n}\r\n"]}