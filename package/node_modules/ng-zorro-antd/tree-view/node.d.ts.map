{"version":3,"file":"node.d.ts","sources":["node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\r\nimport { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';\r\nimport { NzTreeView } from './tree';\r\nexport interface NzTreeVirtualNodeData<T> {\r\n    data: T;\r\n    context: CdkTreeNodeOutletContext<T>;\r\n    nodeDef: CdkTreeNodeDef<T>;\r\n}\r\nexport declare class NzTreeNodeComponent<T> extends CdkTreeNode<T> implements OnDestroy, OnInit {\r\n    protected elementRef: ElementRef<HTMLElement>;\r\n    protected tree: NzTreeView<T>;\r\n    private renderer;\r\n    private cdr;\r\n    indents: boolean[];\r\n    disabled: boolean;\r\n    selected: boolean;\r\n    isLeaf: boolean;\r\n    constructor(elementRef: ElementRef<HTMLElement>, tree: NzTreeView<T>, renderer: Renderer2, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    disable(): void;\r\n    enable(): void;\r\n    select(): void;\r\n    deselect(): void;\r\n    setIndents(indents: boolean[]): void;\r\n    private updateSelectedClass;\r\n    private updateDisabledClass;\r\n}\r\nexport declare class NzTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\r\n    when: (index: number, nodeData: T) => boolean;\r\n}\r\nexport declare class NzTreeVirtualScrollNodeOutletDirective<T> implements OnChanges {\r\n    private _viewContainerRef;\r\n    private _viewRef;\r\n    data: NzTreeVirtualNodeData<T>;\r\n    constructor(_viewContainerRef: ViewContainerRef);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    private shouldRecreateView;\r\n    private hasContextShapeChanged;\r\n    private updateExistingContext;\r\n}\r\n"]}